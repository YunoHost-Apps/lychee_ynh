#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? ynh_script_progression --message="Loading installation settings..." --weight=1

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#REMOVEME? domain=$(ynh_app_setting_get --app=$app --key=domain)
#REMOVEME? path=$(ynh_app_setting_get --app=$app --key=path)
#REMOVEME? #REMOVEME? install_dir=$(ynh_app_setting_get --app=$app --key=install_dir)
#REMOVEME? db_name=$(ynh_app_setting_get --app=$app --key=db_name)
#REMOVEME? db_user=$db_name
#REMOVEME? db_pwd=$(ynh_app_setting_get --app=$app --key=mysqlpwd)
#REMOVEME? data_dir=$(ynh_app_setting_get --app=$app --key=data_dir)
#REMOVEME? phpversion=$YNH_PHP_VERSION

#REMOVEME? fpm_footprint=$(ynh_app_setting_get --app=$app --key=fpm_footprint)
#REMOVEME? fpm_free_footprint=$(ynh_app_setting_get --app=$app --key=fpm_free_footprint)
#REMOVEME? fpm_usage=$(ynh_app_setting_get --app=$app --key=fpm_usage)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..."

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
#REMOVEME? ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=3

# Backup the current version of the app
#REMOVEME? ynh_backup_before_upgrade
#REMOVEME? ynh_clean_setup () {
	# Restore it if the upgrade fails
#REMOVEME? 	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# If db_name doesn't exist, create it
if [ -z "$db_name" ]; then
	db_name=$(ynh_sanitize_dbid --db_name=$app)
#REMOVEME? 	ynh_app_setting_set --app=$app --key=db_name --value=$db_name
fi

# If install_dir doesn't exist, create it
if [ -z "$install_dir" ]; then
#REMOVEME? 	install_dir=/var/www/$app
#REMOVEME? 	ynh_app_setting_set --app=$app --key=install_dir --value=$install_dir
fi

# If data_dir doesn't exist, create it
if [ -z "$data_dir" ]; then
	data_dir=/home/yunohost.app/$app
	mkdir -p $data_dir
    chmod 755 $data_dir
	chown -R $app:www-data $data_dir
#REMOVEME? 	ynh_app_setting_set --app=$app --key=data_dir --value=$data_dir
fi

# If new "/home/yunohost.app/$app" doesn't exist, create it
if [ -z "/home/yunohost.app/$app" ]; then
        data_dir=/home/yunohost.app/$app
        mkdir -p $data_dir
        chmod 755 $data_dir
		chown -R $app:www-data $data_dir
#REMOVEME?         ynh_app_setting_set --app=$app --key=data_dir --value=$data_dir
        cp -a "$install_dir/public/uploads" "$data_dir/uploads"
fi

# If fpm_footprint doesn't exist, create it
if [ -z "$fpm_footprint" ]; then
    fpm_footprint=low
    ynh_app_setting_set --app=$app --key=fpm_footprint --value=$fpm_footprint
fi

# If fpm_free_footprint doesn't exist, create it
if [ -z "$fpm_free_footprint" ]; then
    fpm_free_footprint=0
    ynh_app_setting_set --app=$app --key=fpm_free_footprint --value=$fpm_free_footprint
fi

# If fpm_usage doesn't exist, create it
if [ -z "$fpm_usage" ]; then
    fpm_usage=low
    ynh_app_setting_set --app=$app --key=fpm_usage --value=$fpm_usage
fi

# Cleaning legacy permissions
#REMOVEME? if ynh_legacy_permissions_exists; then
#REMOVEME? 	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Making sure dedicated system user exists..." --weight=1

# Create a dedicated user (if not existing)
#REMOVEME? ynh_system_user_create --username=$app --home_dir="$install_dir"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=4

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir" --keep=".env public/dist/user.css"
fi

chmod 750 "$install_dir"
chmod 750 "$install_dir/bootstrap/cache"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Upgrading dependencies..." --weight=6

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading PHP-FPM configuration..." --weight=2

# Create a dedicated PHP-FPM config
ynh_add_fpm_config --phpversion=$phpversion --usage=$fpm_usage --footprint=$fpm_footprint
#REMOVEME? phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=2

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPDATE A CONFIG FILE
#=================================================
#ynh_script_progression --message="Updating a configuration file..."

#ynh_add_config --template="../conf/.env.example" --destination="$install_dir/.env"

#chmod 400 "$install_dir/.env"
#chown $app:$app "$install_dir/.env"

#=================================================
# INSTALL APP WITH COMPOSER
#=================================================
ynh_script_progression --message="Installing app with Composer..." --weight=1

ynh_install_composer

#=================================================
# BUILDING
#=================================================
ynh_script_progression --message="Building..." --weight=4

ynh_exec_warn_less ynh_composer_exec --commands="dump-autoload"

pushd $install_dir
	php$phpversion artisan migrate -n --force
	php$phpversion artisan config:clear -n
	php$phpversion artisan config:cache -n
	php$phpversion artisan view:clear
popd

#ynh_replace_string \
#--match_string="\$ffmpeg = FFMpeg::create();" \
#--replace_string="\$ffmpeg = FFMpeg::create(array('ffmpeg.binaries'  => '/usr/bin/ffmpeg','ffprobe.binaries' => '/usr/bin/ffprobe',));" \
#--target_file="$install_dir/app/Actions/Photo/Extensions/VideoEditing.php"

chmod 750 "$install_dir"
chmod 750 "$install_dir/bootstrap/cache"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..." --weight=1

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
